<?php

/* node_modules/array-unique/README.md */
class __TwigTemplate_d64dc8351184cbceaa268a193e79cf1102f1353b63c678515fbbd3878d1da830 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        $__internal_a1df7b864b7b481544729d94d304ae01123994570eedf03dc8dfdcb8c78269a4 = $this->env->getExtension("Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension");
        $__internal_a1df7b864b7b481544729d94d304ae01123994570eedf03dc8dfdcb8c78269a4->enter($__internal_a1df7b864b7b481544729d94d304ae01123994570eedf03dc8dfdcb8c78269a4_prof = new Twig_Profiler_Profile($this->getTemplateName(), "template", "node_modules/array-unique/README.md"));

        // line 1
        echo "# array-unique [![NPM version](https://badge.fury.io/js/array-unique.svg)](http://badge.fury.io/js/array-unique)  [![Build Status](https://travis-ci.org/jonschlinkert/array-unique.svg)](https://travis-ci.org/jonschlinkert/array-unique) 

> Return an array free of duplicate values. Fastest ES5 implementation.

## Install with [npm](npmjs.org)

```bash
npm i array-unique --save
```

## Usage

```js
var unique = require('array-unique');

unique(['a', 'b', 'c', 'c']);
//=> ['a', 'b', 'c']
```

## Related
* [arr-diff](https://github.com/jonschlinkert/arr-diff): Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.
* [arr-union](https://github.com/jonschlinkert/arr-union): Returns an array of unique values using strict equality for comparisons.
* [arr-flatten](https://github.com/jonschlinkert/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten.
* [arr-reduce](https://github.com/jonschlinkert/arr-reduce): Fast array reduce that also loops over sparse elements.
* [arr-map](https://github.com/jonschlinkert/arr-map): Faster, node.js focused alternative to JavaScript's native array map.
* [arr-pluck](https://github.com/jonschlinkert/arr-pluck): Retrieves the value of a specified property from all elements in the collection.

## Run tests
Install dev dependencies.

```bash
npm i -d && npm test
```

## Contributing
Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/array-unique/issues)

## Author

**Jon Schlinkert**
 
+ [github/jonschlinkert](https://github.com/jonschlinkert)
+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) 

## License
Copyright (c) 2015 Jon Schlinkert  
Released under the MIT license

***

_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on March 24, 2015._";
        
        $__internal_a1df7b864b7b481544729d94d304ae01123994570eedf03dc8dfdcb8c78269a4->leave($__internal_a1df7b864b7b481544729d94d304ae01123994570eedf03dc8dfdcb8c78269a4_prof);

    }

    public function getTemplateName()
    {
        return "node_modules/array-unique/README.md";
    }

    public function getDebugInfo()
    {
        return array (  22 => 1,);
    }

    public function getSourceContext()
    {
        return new Twig_Source("# array-unique [![NPM version](https://badge.fury.io/js/array-unique.svg)](http://badge.fury.io/js/array-unique)  [![Build Status](https://travis-ci.org/jonschlinkert/array-unique.svg)](https://travis-ci.org/jonschlinkert/array-unique) 

> Return an array free of duplicate values. Fastest ES5 implementation.

## Install with [npm](npmjs.org)

```bash
npm i array-unique --save
```

## Usage

```js
var unique = require('array-unique');

unique(['a', 'b', 'c', 'c']);
//=> ['a', 'b', 'c']
```

## Related
* [arr-diff](https://github.com/jonschlinkert/arr-diff): Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.
* [arr-union](https://github.com/jonschlinkert/arr-union): Returns an array of unique values using strict equality for comparisons.
* [arr-flatten](https://github.com/jonschlinkert/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten.
* [arr-reduce](https://github.com/jonschlinkert/arr-reduce): Fast array reduce that also loops over sparse elements.
* [arr-map](https://github.com/jonschlinkert/arr-map): Faster, node.js focused alternative to JavaScript's native array map.
* [arr-pluck](https://github.com/jonschlinkert/arr-pluck): Retrieves the value of a specified property from all elements in the collection.

## Run tests
Install dev dependencies.

```bash
npm i -d && npm test
```

## Contributing
Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/array-unique/issues)

## Author

**Jon Schlinkert**
 
+ [github/jonschlinkert](https://github.com/jonschlinkert)
+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) 

## License
Copyright (c) 2015 Jon Schlinkert  
Released under the MIT license

***

_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on March 24, 2015._", "node_modules/array-unique/README.md", "/Users/mikel/Developer/DEV/FrontFoundation/tests/app/node_modules/array-unique/README.md");
    }
}
