<?php

/* node_modules/fsevents/build/fse.target.mk */
class __TwigTemplate_6c2f4c9a8208d0dbb07be7641d1caa5fc216da46cc0a52f1f72b65bb8707ebe9 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        $__internal_f8babb526f57a655fd07e69c293457ae39f662dcfce7abf3a2cdd7af003f48a5 = $this->env->getExtension("Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension");
        $__internal_f8babb526f57a655fd07e69c293457ae39f662dcfce7abf3a2cdd7af003f48a5->enter($__internal_f8babb526f57a655fd07e69c293457ae39f662dcfce7abf3a2cdd7af003f48a5_prof = new Twig_Profiler_Profile($this->getTemplateName(), "template", "node_modules/fsevents/build/fse.target.mk"));

        // line 1
        echo "# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := fse
DEFS_Debug := \\
\t'-DNODE_GYP_MODULE_NAME=fse' \\
\t'-DUSING_UV_SHARED=1' \\
\t'-DUSING_V8_SHARED=1' \\
\t'-DV8_DEPRECATION_WARNINGS=1' \\
\t'-D_DARWIN_USE_64_BIT_INODE=1' \\
\t'-D_LARGEFILE_SOURCE' \\
\t'-D_FILE_OFFSET_BITS=64' \\
\t'-DBUILDING_NODE_EXTENSION' \\
\t'-DDEBUG' \\
\t'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \\
\t-O0 \\
\t-gdwarf-2 \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-Wall \\
\t-Wendif-labels \\
\t-W \\
\t-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \\
\t-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \\
\t-std=gnu++0x \\
\t-fno-rtti \\
\t-fno-exceptions \\
\t-fno-threadsafe-statics \\
\t-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \\
\t-I/Users/eshanker/.node-gyp/6.10.2/include/node \\
\t-I/Users/eshanker/.node-gyp/6.10.2/src \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/uv/include \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/v8/include \\
\t-I\$(srcdir)/node_modules/nan

DEFS_Release := \\
\t'-DNODE_GYP_MODULE_NAME=fse' \\
\t'-DUSING_UV_SHARED=1' \\
\t'-DUSING_V8_SHARED=1' \\
\t'-DV8_DEPRECATION_WARNINGS=1' \\
\t'-D_DARWIN_USE_64_BIT_INODE=1' \\
\t'-D_LARGEFILE_SOURCE' \\
\t'-D_FILE_OFFSET_BITS=64' \\
\t'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \\
\t-Os \\
\t-gdwarf-2 \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-Wall \\
\t-Wendif-labels \\
\t-W \\
\t-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \\
\t-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \\
\t-std=gnu++0x \\
\t-fno-rtti \\
\t-fno-exceptions \\
\t-fno-threadsafe-statics \\
\t-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \\
\t-I/Users/eshanker/.node-gyp/6.10.2/include/node \\
\t-I/Users/eshanker/.node-gyp/6.10.2/src \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/uv/include \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/v8/include \\
\t-I\$(srcdir)/node_modules/nan

OBJS := \\
\t\$(obj).target/\$(TARGET)/fsevents.o

# Add to the list of files we specially track dependencies for.
all_deps += \$(OBJS)

# CFLAGS et al overrides must be target-local.
# See \"Target-specific Variable Values\" in the GNU Make manual.
\$(OBJS): TOOLSET := \$(TOOLSET)
\$(OBJS): GYP_CFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_C_\$(BUILDTYPE))
\$(OBJS): GYP_CXXFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_CC_\$(BUILDTYPE))
\$(OBJS): GYP_OBJCFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_C_\$(BUILDTYPE)) \$(CFLAGS_OBJC_\$(BUILDTYPE))
\$(OBJS): GYP_OBJCXXFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_CC_\$(BUILDTYPE)) \$(CFLAGS_OBJCC_\$(BUILDTYPE))

# Suffix rules, putting all outputs into \$(obj).

\$(obj).\$(TOOLSET)/\$(TARGET)/%.o: \$(srcdir)/%.cc FORCE_DO_CMD
\t@\$(call do_cmd,cxx,1)

# Try building from generated source, too.

\$(obj).\$(TOOLSET)/\$(TARGET)/%.o: \$(obj).\$(TOOLSET)/%.cc FORCE_DO_CMD
\t@\$(call do_cmd,cxx,1)

\$(obj).\$(TOOLSET)/\$(TARGET)/%.o: \$(obj)/%.cc FORCE_DO_CMD
\t@\$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-L\$(builddir)

LIBTOOLFLAGS_Debug := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first

LDFLAGS_Release := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-L\$(builddir)

LIBTOOLFLAGS_Release := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first

LIBS :=

\$(builddir)/fse.node: GYP_LDFLAGS := \$(LDFLAGS_\$(BUILDTYPE))
\$(builddir)/fse.node: LIBS := \$(LIBS)
\$(builddir)/fse.node: GYP_LIBTOOLFLAGS := \$(LIBTOOLFLAGS_\$(BUILDTYPE))
\$(builddir)/fse.node: TOOLSET := \$(TOOLSET)
\$(builddir)/fse.node: \$(OBJS) FORCE_DO_CMD
\t\$(call do_cmd,solink_module)

all_deps += \$(builddir)/fse.node
# Add target alias
.PHONY: fse
fse: \$(builddir)/fse.node

# Short alias for building this executable.
.PHONY: fse.node
fse.node: \$(builddir)/fse.node

# Add executable to \"all\" target.
.PHONY: all
all: \$(builddir)/fse.node

";
        
        $__internal_f8babb526f57a655fd07e69c293457ae39f662dcfce7abf3a2cdd7af003f48a5->leave($__internal_f8babb526f57a655fd07e69c293457ae39f662dcfce7abf3a2cdd7af003f48a5_prof);

    }

    public function getTemplateName()
    {
        return "node_modules/fsevents/build/fse.target.mk";
    }

    public function getDebugInfo()
    {
        return array (  22 => 1,);
    }

    public function getSourceContext()
    {
        return new Twig_Source("# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := fse
DEFS_Debug := \\
\t'-DNODE_GYP_MODULE_NAME=fse' \\
\t'-DUSING_UV_SHARED=1' \\
\t'-DUSING_V8_SHARED=1' \\
\t'-DV8_DEPRECATION_WARNINGS=1' \\
\t'-D_DARWIN_USE_64_BIT_INODE=1' \\
\t'-D_LARGEFILE_SOURCE' \\
\t'-D_FILE_OFFSET_BITS=64' \\
\t'-DBUILDING_NODE_EXTENSION' \\
\t'-DDEBUG' \\
\t'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \\
\t-O0 \\
\t-gdwarf-2 \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-Wall \\
\t-Wendif-labels \\
\t-W \\
\t-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \\
\t-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \\
\t-std=gnu++0x \\
\t-fno-rtti \\
\t-fno-exceptions \\
\t-fno-threadsafe-statics \\
\t-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \\
\t-I/Users/eshanker/.node-gyp/6.10.2/include/node \\
\t-I/Users/eshanker/.node-gyp/6.10.2/src \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/uv/include \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/v8/include \\
\t-I\$(srcdir)/node_modules/nan

DEFS_Release := \\
\t'-DNODE_GYP_MODULE_NAME=fse' \\
\t'-DUSING_UV_SHARED=1' \\
\t'-DUSING_V8_SHARED=1' \\
\t'-DV8_DEPRECATION_WARNINGS=1' \\
\t'-D_DARWIN_USE_64_BIT_INODE=1' \\
\t'-D_LARGEFILE_SOURCE' \\
\t'-D_FILE_OFFSET_BITS=64' \\
\t'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \\
\t-Os \\
\t-gdwarf-2 \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-Wall \\
\t-Wendif-labels \\
\t-W \\
\t-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \\
\t-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \\
\t-std=gnu++0x \\
\t-fno-rtti \\
\t-fno-exceptions \\
\t-fno-threadsafe-statics \\
\t-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \\
\t-I/Users/eshanker/.node-gyp/6.10.2/include/node \\
\t-I/Users/eshanker/.node-gyp/6.10.2/src \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/uv/include \\
\t-I/Users/eshanker/.node-gyp/6.10.2/deps/v8/include \\
\t-I\$(srcdir)/node_modules/nan

OBJS := \\
\t\$(obj).target/\$(TARGET)/fsevents.o

# Add to the list of files we specially track dependencies for.
all_deps += \$(OBJS)

# CFLAGS et al overrides must be target-local.
# See \"Target-specific Variable Values\" in the GNU Make manual.
\$(OBJS): TOOLSET := \$(TOOLSET)
\$(OBJS): GYP_CFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_C_\$(BUILDTYPE))
\$(OBJS): GYP_CXXFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_CC_\$(BUILDTYPE))
\$(OBJS): GYP_OBJCFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_C_\$(BUILDTYPE)) \$(CFLAGS_OBJC_\$(BUILDTYPE))
\$(OBJS): GYP_OBJCXXFLAGS := \$(DEFS_\$(BUILDTYPE)) \$(INCS_\$(BUILDTYPE))  \$(CFLAGS_\$(BUILDTYPE)) \$(CFLAGS_CC_\$(BUILDTYPE)) \$(CFLAGS_OBJCC_\$(BUILDTYPE))

# Suffix rules, putting all outputs into \$(obj).

\$(obj).\$(TOOLSET)/\$(TARGET)/%.o: \$(srcdir)/%.cc FORCE_DO_CMD
\t@\$(call do_cmd,cxx,1)

# Try building from generated source, too.

\$(obj).\$(TOOLSET)/\$(TARGET)/%.o: \$(obj).\$(TOOLSET)/%.cc FORCE_DO_CMD
\t@\$(call do_cmd,cxx,1)

\$(obj).\$(TOOLSET)/\$(TARGET)/%.o: \$(obj)/%.cc FORCE_DO_CMD
\t@\$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-L\$(builddir)

LIBTOOLFLAGS_Debug := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first

LDFLAGS_Release := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first \\
\t-mmacosx-version-min=10.7 \\
\t-arch x86_64 \\
\t-L\$(builddir)

LIBTOOLFLAGS_Release := \\
\t-framework CoreFoundation -framework CoreServices \\
\t-undefined dynamic_lookup \\
\t-Wl,-no_pie \\
\t-Wl,-search_paths_first

LIBS :=

\$(builddir)/fse.node: GYP_LDFLAGS := \$(LDFLAGS_\$(BUILDTYPE))
\$(builddir)/fse.node: LIBS := \$(LIBS)
\$(builddir)/fse.node: GYP_LIBTOOLFLAGS := \$(LIBTOOLFLAGS_\$(BUILDTYPE))
\$(builddir)/fse.node: TOOLSET := \$(TOOLSET)
\$(builddir)/fse.node: \$(OBJS) FORCE_DO_CMD
\t\$(call do_cmd,solink_module)

all_deps += \$(builddir)/fse.node
# Add target alias
.PHONY: fse
fse: \$(builddir)/fse.node

# Short alias for building this executable.
.PHONY: fse.node
fse.node: \$(builddir)/fse.node

# Add executable to \"all\" target.
.PHONY: all
all: \$(builddir)/fse.node

", "node_modules/fsevents/build/fse.target.mk", "/Users/mikel/Developer/DEV/FrontFoundation/tests/app/node_modules/fsevents/build/fse.target.mk");
    }
}
